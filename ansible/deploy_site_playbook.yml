# disable host root access

-
  hosts: all
  roles:
    - db-backup
  tasks:
    ####
    # Setup the docker containers & docker-compose based environment
    ####
    - name: Ensures ~/docker-files/keys/ dirs exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - ~/docker-files
        - ~/docker-files/keys
      notify: Restart docker containers
    - name: Copy ~/docker-files/ Files
      copy:
        src: ./docker-files/{{ item }}
        dest: ~/docker-files/{{ item }}
      loop:
        - docker-compose.yml
      notify: Restart docker containers
    - name: Copy PEM key
      copy:
        src: ./docker-files/keys/{{ env }}-1nfinite.pem
        dest: ~/docker-files/keys/1nfinite.pem
      notify: Restart docker containers
    - name: Create secrets file for containers
      template:
        src: docker-files/{{ item }}.j2
        dest: ~/docker-files/{{ item }}
        backup: true
      loop:
        - .env
        - web-portal.env
        - api.env
        - discord-bot.env
      notify: Restart docker containers
    # this always executes - need to use the community.docker collection to
    # make it smarter and trigger the restart handler only if the image
    # actually updates.
    - name: pull docker images
      command:
        cmd: docker-compose pull
        chdir: ~/docker-files
      notify: Restart docker containers
    - name: setup systemd init for docker-compose
      become: true
      copy:
        src: systemd/infinite.service
        dest: /etc/systemd/system
    - name: enable systemd init for docker-compose
      become: true
      systemd:
        name: infinite
        enabled: true
        daemon_reload: true
    ####
    # setup nginx
    ####
    - name: delete default nginx site
      become: true
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify:
        - Restart nginx
    - name: Copy nginx Config
      become: true
      copy:
        src: nginx/{{env}}/sites-enabled/{{item}}
        dest: /etc/nginx/sites-enabled/
        owner: root
        group: root
        mode: '0644'
      loop:
        - api.infinite.com
        - infinite.com
      notify:
        - Restart nginx
  handlers:
    - name: Restart nginx
      become: true
      service:
        name: nginx
        state: restarted
    - name: Restart docker containers
      become: true
      service:
        name: infinite
        state: restarted
