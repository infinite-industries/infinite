# you're looking at it!
help:
  @just --list 

# Usage: `just init` or `just init prod`
# initial software install & config for a host. 
init env="staging":
  ansible-playbook -l {{ env }} base_playbook.yml

# deploy the site. Usage: `just deploy` or `just deploy prod`
deploy env="staging":
  ansible-playbook -l {{ env }} deploy_site_playbook.yml

# query the status of services for an environment
status env="staging":
  ansible -b -m command -a 'systemctl status nginx infinite' {{ env }}

# restart services for an environment
@restart env="staging":
  printf "restarting nginx service in %s... " {{ env }}
  ansible -b -m service -a 'name=nginx state=restarted' {{ env }} >/dev/null 2>&1
  printf "done\n"

  printf "restarting infinite services in %s... " {{ env }}
  ansible -b -m service -a 'name=infinite state=restarted' {{ env }} >/dev/null 2>&1 
  printf "done\n"

  just status

# pull the (correct) updated docker image(s)
update-images env="staging":
  ansible -m command -a 'chdir=~/docker-files docker-compose pull' {{ env }}


# cache the passphrase used to decrypt files
cache-pass:
  #!/bin/sh
  printf "Ansible Vault Passphrase: "
  trap 'stty echo' INT EXIT
  stty -echo
  read PASS
  printf "\n"
  printf "%s" ${PASS} > .password
  chmod 600 .password
