version: '3.5'
services:
  postgres:
    image: 'docker.io/library/postgres:alpine'
    environment:
      - POSTGRES_DB=infinite-api
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=xxx
    expose:
      - "5432"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready'"]
      interval: 1s
      timeout: 5s
      retries: 10
    # uncomment if you want to populate the db with a recent backup you have
    # in /var/tmp/infinite-prod.sql
    # volumes:
      #      - /var/tmp/infinite-prod.sql:/docker-entrypoint-initdb.d/init.sql

  api-server:
    image: ghcr.io/infinite-industries/api-server:latest
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      AUTH_USE_TEST_USERS: "TRUE"
    expose:
      - "3003"
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy

  web-portal:
    image: ghcr.io/infinite-industries/web-portal:latest
    environment:
      HOST: 0.0.0.0 # Needed to make nuxt work inside docker
      USE_PROXY: "true" # starts a proxy service in the container to allow server side requests against localhost to work inside the compose stack
      API_URL: "http://localhost:3003/v1" # These are defaulted for runtimeConfig but still need set here for server-side middleware
      APP_URL: "http://localhost:7779"
    depends_on:
      - api-server
    expose:
      - "7779"
    ports:
      - "7779:7779"

